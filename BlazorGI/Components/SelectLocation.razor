@using GarangeInventory.Storage
@inject Data.DataService Data;

@if (Data != null)
{
    <label for="storage">Storage Unit</label>
    <InputSelect id="storage" @bind-Value="selectedStorageID" TValue="int?">
        <option value="">Select...</option>
        @if (Data.Storages != null)
        {
            @foreach (StorageUnit storage in Data.Storages)
            {
                <option @key="storage.ID" value="@storage.ID">@storage.Name</option>
            }
        }
    </InputSelect>
    pickedStorageUnit = Data.Storages.FirstOrDefault(storag => storag.ID == selectedStorageID);
}

<br />

@if (pickedStorageUnit != null)
{
    <label for="shelfUnit">Shelf Unit</label>
    <InputSelect id="shelfUnit" @bind-Value="selectedShelfUnitID" TValue="int?">
        @if (pickedStorageUnit.ShelfUnits != null)
        {
            <option value="">Select...</option>
            @foreach (ShelfUnit shelfUnit in pickedStorageUnit.ShelfUnits)
            {
                <option @key="shelfUnit.ID" value="@shelfUnit.ID">@shelfUnit.Name</option>
            }
        }
    </InputSelect>
    pickedShelfUnit = pickedStorageUnit.ShelfUnits.FirstOrDefault(ShelfU => ShelfU.ID == selectedShelfUnitID);
}

@if (pickedShelfUnit != null)
{
    <label for="boxOnSU">Box</label>
    <InputSelect id="boxOnSU" @bind-Value="selectedBoxID" TValue="int?">
        @if (pickedShelfUnit.Boxes != null)
        {
            <option></option>
            @foreach (Box box in pickedShelfUnit.Boxes)
            {
                <option @key="box.ID" value="@box.ID">@box.Name</option>
            }
        }
    </InputSelect>
    pickedBox = pickedShelfUnit.Boxes.FirstOrDefault(box => box.ID == selectedBoxID);
}

<br />

@if (pickedShelfUnit != null)
{
    <label for="shelf">Shelf</label>
    <InputSelect id="shelf" @bind-Value="selectedShelfID" TValue="int?">
        @if (pickedShelfUnit.Shelfs != null)
        {
            <option></option>
            @foreach (Shelf shelf in pickedShelfUnit.Shelfs)
            {
                <option @key="shelf.ID" value="@shelf.ID">@shelf.Name</option>
            }
        }
    </InputSelect>
    pickedShelf = pickedShelfUnit.Shelfs.FirstOrDefault(Shelf => Shelf.ID == selectedShelfID);
}


@if (pickedShelf != null)
{
    <label for="box">Box</label>
    <InputSelect id="box" @bind-Value="selectedBoxID" TValue="int?">
        @if (pickedShelf.Boxes != null)
        {
            <option></option>
            @foreach (Box box in pickedShelf.Boxes)
            {
                <option @key="box.ID" value="@box.ID">@box.Name</option>
            }
        }
    </InputSelect>
    pickedBox = pickedShelf.Boxes.FirstOrDefault(box => box.ID == selectedBoxID);
}







@code {

    [Parameter]
    public int? selectedStorageID { get; set; }
    [Parameter]
    public int? selectedShelfUnitID { get; set; }
    [Parameter]
    public int? selectedShelfID { get; set; }
    [Parameter]
    public int? selectedBoxID { get; set; }

    private StorageUnit pickedStorageUnit { get; set; }
    private ShelfUnit pickedShelfUnit { get; set; }
    private Shelf pickedShelf { get; set; }
    private Box pickedBox { get; set; }





}
