@using GarangeInventory.Storage
@inject Data.DataService Data;


<label for="storage">Storage Unit</label>
<InputSelect id="storage" @bind-Value="selectedSUID">
    @foreach (StorageUnit storage in Data.Storages)
    {
        <option value="@storage.ID">@storage.Name</option>
    }
</InputSelect>

@if (Data.Storages != null)
{
    pickedStorageUnit = @FindStorageUnitByID();
    <label for="shelfUnit">Shelf Unit</label>
    <InputSelect id="shelfUnit" @bind-Value="selectedShelfUnitID">
        @if (pickedStorageUnit != null)
        {
            @foreach (ShelfUnit shelfUnit in pickedStorageUnit.ShelfUnits)
            {
                <option value="@shelfUnit.ID">@shelfUnit.Name</option>
            }
        }
    </InputSelect>
}

@if (pickedStorageUnit.ShelfUnits != null)
{
    pickedShelfUnit = FindShelfUnitByID();
    <label for="shelf">Shelf</label>
    <InputSelect id="shelf" @bind-Value="selectedShelfID">
        @if (pickedShelfUnit != null)
        {
            @foreach (Shelf shelf in pickedShelfUnit.Shelfs)
            {
                <option value="@shelf.ID">@shelf.Name</option>
            }
        }
    </InputSelect>
}






@code {

    [Parameter]
    public int selectedSUID { get; set; }
    [Parameter]
    public int selectedShelfUnitID { get; set; }
    [Parameter]
    public int selectedShelfID { get; set; }

    private StorageUnit pickedStorageUnit { get; set; }
    private ShelfUnit pickedShelfUnit { get; set; }

    private StorageUnit FindStorageUnitByID()
    {
        StorageUnit storage = Data.Storages.FirstOrDefault(storag => storag.ID == selectedSUID);
        return storage;
    }
    private ShelfUnit FindShelfUnitByID()
    {
        ShelfUnit shelfUnit = pickedStorageUnit.ShelfUnits.FirstOrDefault(ShelfU => ShelfU.ID == selectedShelfUnitID);
        return shelfUnit;
    }



}
