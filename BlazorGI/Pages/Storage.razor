@page "/storage/{iD:int}"
@inject Data.DataService Data
@using GarangeInventory.Storage
@using Microsoft.AspNetCore.Components.QuickGrid


<PageTitle>Storage</PageTitle>

<h3>Storage: @DisplayStorageName() </h3>

<QuickGrid Items="@Data.GetItemsFromStorageUnit(ID).AsQueryable()">
    <PropertyColumn Property="@(i => i.Name)" Title="Item Name" Sortable="true" />
    <TemplateColumn Title="ShelfUnit Name">
        @GetShelfUnit(context)?.Name   <a href="/locationdetail/@context.ID">Show Location</a>
    </TemplateColumn>
</QuickGrid>

@code {
    [Parameter]
    public int ID { get; set; }

    private IQueryable<ShelfUnit> ShelfUnitQueryable()
    {
        var queryableShelfUnit = Data.Storages
        .Where(storages => storages.ID == ID)
        .SelectMany(sbyt => sbyt.ShelfUnits)
        .AsQueryable();
        return queryableShelfUnit;
    }

    private string DisplayStorageName()
    {
        string storageNam = "No storage Unit avaialble.";
        StorageUnit storage = Data.Storages.FirstOrDefault(storages => storages.ID == ID);
        if (storage != null)
        {
            storageNam = storage.Name;
        }
        return storageNam;
    }

    /// <summary>
    /// search for item in Shelfunit 
    /// </summary>
    /// <param name="itemToBeFound"></param>
    /// <returns> returns found shelfUnit or empty shelfUnit if item ID is not found inside</returns>
    private ShelfUnit GetShelfUnit(Item itemToBeFound)
    {
        StorageUnit storageUnit = Data.Storages.First(storage => storage.ID == ID);
        foreach (ShelfUnit shelfUnit in storageUnit.ShelfUnits)
        {
            if (shelfUnit.Items.FirstOrDefault(i => i.ID == itemToBeFound.ID) != null)
                return shelfUnit;
            foreach (Shelf shelf in shelfUnit.Shelfs)
            {
                if (shelf.Items.FirstOrDefault(i => i.ID == itemToBeFound.ID) != null)
                    return shelfUnit;
                foreach (Box box in shelf.Boxes)
                {
                    if (box.Items.FirstOrDefault(i => i.ID == itemToBeFound.ID) != null)
                        return shelfUnit;
                }
            }
            foreach (Box box in shelfUnit.Boxes)
            {
                if (box.Items.FirstOrDefault(i => i.ID == itemToBeFound.ID) != null)
                    return shelfUnit;
            }
        }
        return new ShelfUnit("Item you were searching was not found!", 1); 
    }


    private IQueryable<Item> GetItems(List<StorageUnit> storages)
    {
        List<Item> result = new List<Item>();
        //TODO probably worng - just look into the one stroage you got via ID
        result = Data.GetItemsFromStorageUnit(ID);
        return result.AsQueryable();
    }


}
