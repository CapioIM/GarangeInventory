@page "/storage/{ID:int}"
@inject Data.DataService Data;
@using GarangeInventory.Storage
@using GarangeInventory.Storage.Shelf

<PageTitle>Storage</PageTitle>
<h3>Storage: @DisplayStorageName()</h3>

@foreach (StorageUnit storageUnit in Data.Storages.Where(storageUnit => storageUnit.ID == ID))
{
    @foreach (ShelfUnit shelfUnit in storageUnit.ShelfUnits)
    {
        <table border="1">
            <tr>
                <th>ShelfUnit</th>
                <th>Shelf</th>
                <th>Box</th>
                <th>Item</th>
            </tr>
            |
            <tr>
                <td>@shelfUnit.Name</td>
            </tr>

            <tr>
                @foreach (Shelf shelf in shelfUnit.Shelfs)
                {
                    <td>@shelf.Name Level , List of boxes/items:</td>
                    @for (int i = 0; i < shelf.Items.Count; i++)
                    {
                        int countFrom1 = i + 1;
                        <p>@countFrom1 - @shelf.Items[i].Name</p>
                    }
                    <li>
                        @foreach (Box box in shelfUnit.Boxes)
                        {
                            <p>@box.Name</p>
                            @foreach (Item item in box.Items)
                            {
                                <ul>
                                    @item.Name  Quantity @item.Quantity
                                </ul>
                            }
                        }
                    </li>
                }
            </tr>

        </table>
    }
}

<table border="1">
    <tr>
        @foreach (StorageUnit storageUnit in Data.Storages.Where(storageUnit => storageUnit.ID == ID))
        {
            <th>
                @foreach (ShelfUnit shelfUnit in storageUnit.ShelfUnits)
                {
                    <h4>@shelfUnit.Name</h4>
                }
            </th>
        }
    </tr>
</table>


@code {
    [Parameter]
    public int ID { get; set; }

    private string DisplayStorageName()
    {
        string storageNam = "No storage Unit avaialble.";
        foreach (StorageUnit storageUnit in Data.Storages.Where(storages => storages.ID == ID))
        {
            return storageUnit.Name;
        }
        return storageNam;
    }
}
