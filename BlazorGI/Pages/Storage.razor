@page "/storage/{iD:int}"
@inject Data.DataService Data
@using GarangeInventory.Storage
@using Microsoft.AspNetCore.Components.QuickGrid


<PageTitle>Storage</PageTitle>

<h3>Storage: @DisplayStorageName() </h3>

<QuickGrid Items="@Data.GetItemsFromStorageUnit(iD).AsQueryable()">
    <PropertyColumn Property="@(i => i.Name)" Title="Item Name" Sortable="true" />
    <TemplateColumn Title="ShelfUnit Name">
        @GetShelfUnit(context)?.Name   <a href="/locationdetail/@context.ID">Show Location</a>
    </TemplateColumn>
</QuickGrid>

@code {
    [Parameter]
    public int iD { get; set; }

    private IQueryable<ShelfUnit> ShelfUnitQueryable()
    {
        var queryableShelfUnit = Data.Storages
        .Where(storages => storages.ID == iD)
        .SelectMany(sbyt => sbyt.ShelfUnits)
        .AsQueryable();
        return queryableShelfUnit;
    }

    private string DisplayStorageName()
    {
        string storageNam = "No storage Unit avaialble.";
        foreach (StorageUnit storageUnit in Data.Storages.Where(storages => storages.ID == iD))
        {
            return storageUnit.Name;
        }
        return storageNam;
    }
    /// <summary>
    /// 
    /// </summary>
    /// <param name="itemToBeFound"></param>
    /// <returns>coresponding shelfunit or null if not found</returns>
    private ShelfUnit GetShelfUnit(Item itemToBeFound)
    {
        List<Item> result = new List<Item>();
        var storageUnit = Data.Storages.FirstOrDefault(storage => storage.ID == iD);
        foreach (ShelfUnit shelfUnit in storageUnit.ShelfUnits)
        {
            if (shelfUnit.Items.FirstOrDefault(i => i == itemToBeFound) != null)
                return shelfUnit;
            foreach (Shelf shelf in shelfUnit.Shelfs)
            {
                if (shelf.Items.FirstOrDefault(i => i == itemToBeFound) != null)
                    return shelfUnit;
                foreach (Box box in shelf.Boxes)
                {
                    if (box.Items.FirstOrDefault(i => i == itemToBeFound) != null)
                        return shelfUnit;
                }
            }
            foreach (Box box in shelfUnit.Boxes)
            {
                if (box.Items.FirstOrDefault(i => i == itemToBeFound) != null)
                    return shelfUnit;
            }
        }
        return null;
       // return new ShelfUnit();
    }

    
    private IQueryable<Item> GetItems(List<StorageUnit> storages)
    {
        List<Item> result = new List<Item>();
        foreach (StorageUnit storage in storages)  //TODO probably worng - just look into the one stroage you got via ID
        {
            foreach (ShelfUnit shelfUnit in storage.ShelfUnits)
            {
                result.AddRange((shelfUnit.Items));
                foreach (Shelf shelf in shelfUnit.Shelfs)
                {
                    result.AddRange((shelf.Items));
                    foreach (Box box in shelf.Boxes)
                    {
                        result.AddRange((box.Items));
                    }
                }
                foreach (Box box in shelfUnit.Boxes)
                {
                    result.AddRange((box.Items));
                }
            }
        }
        return result.AsQueryable();
    }
     

}
