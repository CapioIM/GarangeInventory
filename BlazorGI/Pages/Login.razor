@page "/login"
@using GarangeInventory.Storage
@inject Data.UserService UserData
@inject NavigationManager MyNavigationManager

<PageTitle>Garage Inventory Login</PageTitle>

<div>
    <h3>Enter your Username</h3>
    <input @bind=UsernameInput />
    <button class="btn btn-outline-primary" @onclick=GetUserCheckMessage title="Let's log in.">Click to login.</button>
    <p>@notValidLogin</p>
</div>

<div>
    <h3>Create account.</h3>
    <input @bind=nameUserToCreate />
    <button class="btn btn-outline-primary" @onclick=CreateUser>Create User</button>
</div>

@code {
    public string UsernameInput { get; set; }
    private string notValidLogin { get; set; } = "";
    private bool isUser { get; set; }

    private void GetUserCheckMessage()
    {
        try
        {
            if (UsernameInput != null)
            {
                isUser = UserData.GetUserCheck(UsernameInput);
                if (isUser && UsernameInput.ToLower() == UserData.User.Name.ToLower())
                {
                    UserData.Authentication = true;
                    MyNavigationManager.NavigateTo($"/{UsernameInput}/dashboard");
                }
            }
            if (UsernameInput == null || UsernameInput.ToLower() != UserData.User.Name.ToLower() || UserData.User.Name == null)
            {
                notValidLogin = "Login not valid!";
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
            Console.BackgroundColor = ConsoleColor.Red;
            Console.WriteLine("GetUserCheckMessage() failed. -----------------------");
            Console.ResetColor();
        }
    }

    private string nameUserToCreate { get; set; }
    private void CreateUser()
    {
        UserData.CreateUser(nameUserToCreate);
    }
}